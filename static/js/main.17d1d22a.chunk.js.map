{"version":3,"sources":["assets/images/icon-linkedin.svg","assets/images/profile-pic-original.jpg","assets/images/andrew-az.png","assets/images/logo.png","App.js","serviceWorker.js","index.js","assets/images/icon-facebook.svg"],"names":["module","exports","Home","className","src","photograph","alt","autograph","to","About","Resume","App","logo","iconFacebook","href","target","rel","iconLinkedin","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,kD,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,6OCiI3C,SAASC,IACP,OACA,yBAAKC,UAAU,OACd,yBAAKA,UAAU,iBACd,yBAAKA,UAAU,kBACd,yBACCC,IAAKC,IACLF,UAAU,iBACVG,IAAI,yBAGN,yBAAKH,UAAU,OACd,yBACCC,IAAKG,IACLJ,UAAU,gBACVG,IAAI,wBAGN,mEACA,kBAAC,IAAD,CAAMH,UAAU,wBAAwBK,GAAG,UAA3C,6BASJ,SAASC,IACP,OACE,yBAAKN,UAAU,OACb,yBAAKA,UAAU,iBACb,uCAMR,SAASO,IACP,OACE,yBAAKP,UAAU,OACb,yBAAKA,UAAU,iBACb,wCAMOQ,MAnKf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKR,UAAU,WACb,yBAAKA,UAAU,4BACnB,kBAAC,IAAD,CAAMA,UAAU,+BAA+BK,GAAG,KAC5C,yBACEJ,IAAKQ,IACLT,UAAU,KACVG,IAAI,UAIR,wBAAIH,UAAU,qCACZ,wBAAIA,UAAU,eACZ,kBAAC,IAAD,CAAMA,UAAU,wBAAwBK,GAAG,KACzC,yBACEJ,IAAKS,IACLV,UAAU,uBACVG,IAAI,wBAIV,wBAAIH,UAAU,eACZ,kBAAC,IAAD,CAAMA,UAAU,wBAAwBK,GAAG,UACzC,yBACEJ,IAAKS,IACLV,UAAU,uBACVG,IAAI,wBAIV,wBAAIH,UAAU,eACZ,kBAAC,IAAD,CAAMA,UAAU,wBAAwBK,GAAG,WACzC,yBACEJ,IAAKS,IACLV,UAAU,uBACVG,IAAI,wBAIV,wBAAIH,UAAU,eACZ,uBACEA,UAAU,2BACVW,KAAK,wCACLC,OAAO,SACPC,IAAI,uBAEJ,yBACEZ,IAAKS,IACLV,UAAU,uBACVG,IAAI,wBAIV,wBAAIH,UAAU,eACZ,uBACEA,UAAU,2BACVW,KAAK,gDACLC,OAAO,SACPC,IAAI,uBAEJ,yBACEZ,IAAKa,IACLd,UAAU,uBACVG,IAAI,wBAIV,wBAAIH,UAAU,eACZ,uBACEA,UAAU,2BACVW,KAAK,eACLC,OAAO,SACPC,IAAI,uBAEJ,yBACEZ,IAAKa,IACLd,UAAU,uBACVG,IAAI,sBAaZ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,KAChB,kBAACjB,EAAD,OAEF,kBAAC,IAAD,CAAOiB,KAAK,UACV,kBAACV,EAAD,OAEF,kBAAC,IAAD,CAAOU,KAAK,WACV,kBAACT,EAAD,QAIJ,yBAAKP,UAAU,yCAAf,yBC1GYiB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD8H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,kBErInBlC,EAAOC,QAAU,IAA0B,4C","file":"static/js/main.17d1d22a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-linkedin.9c9759b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/profile-pic-original.5de8399e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/andrew-az.254c70c2.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.50e1fe79.png\";","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport photograph from './assets/images/profile-pic-original.jpg';\nimport autograph from './assets/images/andrew-az.png';\nimport logo from './assets/images/logo.png';\nimport iconFacebook from './assets/images/icon-facebook.svg';\nimport iconLinkedin from './assets/images/icon-linkedin.svg';\nimport './assets/sass/App.scss';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"pa0 ma0\">\n        <div className=\"white fixed left-1 top-1\">\n\t\t\t\t<Link className=\"App-link no-underline fl pa1\" to=\"/\">\n          <img\n            src={logo}\n            className=\"w3\"\n            alt=\"AAZ\"\n          />\n\t\t\t\t</Link>\n        </div>\n        <ul className=\"fixed right-1 top-1 dt ma0 pa0 tr\">\n          <li className=\"dtc ma0 pr2\">\n            <Link className=\"white no-underline fl\" to=\"/\">\n              <img\n                src={iconFacebook}\n                className=\"App-icon-facebook w2\"\n                alt=\"Andrew's Facebook\"\n              />\n            </Link>\n          </li>\n          <li className=\"dtc ma0 pr2\">\n            <Link className=\"white no-underline fl\" to=\"/About\">\n              <img\n                src={iconFacebook}\n                className=\"App-icon-facebook w2\"\n                alt=\"Andrew's Facebook\"\n              />\n            </Link>\n          </li>\n          <li className=\"dtc ma0 pr2\">\n            <Link className=\"white no-underline fl\" to=\"/Resume\">\n              <img\n                src={iconFacebook}\n                className=\"App-icon-facebook w2\"\n                alt=\"Andrew's Facebook\"\n              />\n            </Link>\n          </li>\n          <li className=\"dtc ma0 pr2\">\n            <a\n              className=\"App-link no-underline fl\"\n              href=\"https://www.facebook.com/andrewazweb/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <img\n                src={iconFacebook}\n                className=\"App-icon-facebook w2\"\n                alt=\"Andrew's Facebook\"\n              />\n            </a>\n          </li>\n          <li className=\"dtc ma0 pr2\">\n            <a\n              className=\"App-link no-underline fl\"\n              href=\"https://www.linkedin.com/in/andrew-zacharias/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <img\n                src={iconLinkedin}\n                className=\"App-icon-linkedin w2\"\n                alt=\"Andrew's Linkedin\"\n              />\n            </a>\n          </li>\n          <li className=\"dtc ma0 pr0\">\n            <a\n              className=\"App-link no-underline fl\"\n              href=\"+61468366820\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <img\n                src={iconLinkedin}\n                className=\"App-icon-linkedin w2\"\n                alt=\"Andrew's Phone\"\n              />\n            </a>\n          </li>\n        </ul>\n\n        {/*\n          A <Switch> looks through all its children <Route>\n          elements and renders the first one whose path\n          matches the current URL. Use a <Switch> any time\n          you have multiple routes, but you want only one\n          of them to render at a time\n        */}\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/resume\">\n            <Resume />\n          </Route>\n        </Switch>\n\n        <div className=\"white-50 fixed center left-1 bottom-1\">\n        Â© 2019 andrewaz\n        </div>\n      </div>\n    </Router>\n  );\n}\n\n// You can think of these components as \"pages\"\n// in your app.\n\nfunction Home() {\n  return (\n\t\t<div className=\"App\">\n\t\t\t<div className=\"App-container\">\n\t\t\t\t<div className=\"App-photograph\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={photograph}\n\t\t\t\t\t\tclassName=\"App-photograph\"\n\t\t\t\t\t\talt=\"Andrew's Photograph\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"pt3\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={autograph}\n\t\t\t\t\t\tclassName=\"App-autograph\"\n\t\t\t\t\t\talt=\"Andrew's Autograph\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<p>A passionate front-end web developer</p>\n\t\t\t\t<Link className=\"App-link no-underline\" to=\"/about\">\n\t\t\t\t\t&lt;div &#123;...HelloWorld&#125; /&gt;\n\t\t\t\t</Link>\n\n\t\t\t</div>\n\t\t</div>\n  );\n}\n\nfunction About() {\n  return (\n    <div className=\"App\">\n      <div className=\"App-container\">\n        <h2>About</h2>\n      </div>\n    </div>\n  );\n}\n\nfunction Resume() {\n  return (\n    <div className=\"App\">\n      <div className=\"App-container\">\n        <h2>Resume</h2>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/icon-facebook.0eda72ba.svg\";"],"sourceRoot":""}